mutate(percent = count/3*100) %>%
group_by(sample2, bin) %>%
summarise(ave_perc = mean(percent), sem = std(percent)) %>%
mutate(clean_bin = str_sub(bin, start = 2, end = 6),
clean_bin = str_replace(clean_bin, ",", " - "),
clean_sample = str_sub(sample2, end = -4))
hb_data_3
# add 'count' column to original df (hb_data_1)
hb_data_3 <- hb_data_1 %>%
left_join(.,hb_data_2, by = c("gene", "sample2"))  %>%
distinct() %>%
# calculate ave count per bin in each sample -> convert to %
select(gene, sample2, bin, count) %>%
mutate(percent = count/3*100) %>%
group_by(sample2, bin) %>%
summarise(ave_perc = mean(percent), sem = std(percent)) %>%
mutate(clean_bin = str_sub(bin, start = 2, end = 6),
clean_bin = str_replace(clean_bin, ",", " - "),
clean_sample = str_sub(sample2, end = -5))
hb_data_3
hb_data_3 %>%
ggplot(aes(x = clean_bin, y= ave_perc, group = clean_sample)) +
geom_line(aes(color = sample2)) +
geom_point(aes(color = sample2), alpha = 1) +
geom_linerange(aes(ymin = ave_perc-sem, ymax = ave_perc+sem), alpha=0.5)+
labs(x = "TPM, log10", y = "Gene detection [%]", color = "Primers") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
hb_data_3 %>%
ggplot(aes(x = clean_bin, y= ave_perc, group = clean_sample)) +
geom_line(aes(color = clean_sample)) +
geom_point(aes(color = clean_sample), alpha = 1) +
geom_linerange(aes(ymin = ave_perc-sem, ymax = ave_perc+sem), alpha=0.5)+
labs(x = "TPM, log10", y = "Gene detection [%]", color = "Primers") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
a_scheme <- ggdraw() + draw_image("/Users/damian_wollny/PD/Schemes/OoL/fig1.5.png")
# Setup
library(tidyverse)
library(factoextra)
library(cowplot)
theme_set(theme_classic(base_size=24))
a_scheme <- ggdraw() + draw_image("/Users/damian_wollny/PD/Schemes/OoL/fig1.5.png")
plot(a_scheme)
a_scheme <- ggdraw() + draw_image("./fig1_scheme.png")
getwd()
setwd(/Users/damian_wollny/PD/Data/OoL/45_github/single_coacervate_seq/_fig1)
setwd("/Users/damian_wollny/PD/Data/OoL/45_github/single_coacervate_seq/_fig1")
setwd("/Users/damian_wollny/PD/Data/OoL/45_github/single_coacervate_seq/")
get_hmfa_quali_var()
getwd()
# Load seq data
master <- readRDS(file = "./_input/fig1_input.RDS")
# Load seq data
master <- readRDS(file = "./_input/coacervate_input.RDS")
a_scheme <- ggdraw() + draw_image("./_fig1/fig1_scheme.png")
plot(a_scheme)
# load FACS data
facs_data <- readRDS(file = "/Users/damian_wollny/PD/Data/OoL/18.2_integrative_analysis/_8_coacervate_size_comp/master_facs.RDS")
# Format data: PDDA(no RNA)
fig1b_data_no_rna <- facs_data %>% filter(experiment == "ool17_noRNA" | experiment == "ool18_noRNA") %>%
mutate(log2_FSC = log2(`FSC-A`)) %>%
mutate(log2_SSC = log2(`SSC-A`))
fig1b_m_no_rna <- lm(`SSC-A` ~ `FSC-A`, fig1b_data_no_rna)
fig1b_r2_no_rna <- as.character(paste("R^2 =", round(summary(fig1b_m_no_rna)$r.squared, 3), sep = " "))
fig1b_pears_no_rna <- paste("r = ", round(cor(fig1b_data_no_rna$`FSC-A`, fig1b_data_no_rna$`SSC-A`), 2), sep = "")
# Plot:
fig1b_plot <- ggplot(data = fig1b_data_no_rna, aes(x = `log2_FSC`, y = `log2_SSC`)) +
geom_point(size = 3, alpha = .7, shape = 21) +
annotate(geom = 'text', label = fig1b_pears_no_rna, x = min(fig1b_data_no_rna$log2_FSC), y = max(fig1b_data_no_rna$log2_SSC), hjust = 0, vjust = 1, size = 6) +
stat_smooth(col = "indianred3", alpha = .3)  +
labs(y = "Condensate granularity\nlog2(SSC)", x = "Condensate size\nlog2(FSC)")
plot(fig1b_plot)
fig1e_new_plot <- ggplot(data = pdda, aes(y = num_trans, x = mean_length,  size = (FSC))) +
geom_point(alpha = .8, shape = 21) +
scale_fill_distiller(palette = "Spectral", name = "Ave RNA\nlength") +
stat_smooth(col = "indianred2", show.legend = FALSE) +
theme(legend.position = c(.8,.8),   legend.key.size = unit(.6, "cm"), legend.key.width = unit(.5,"cm"),
legend.title = element_text(size = 22), legend.text = element_text(size = 20)) +
labs(y = "Number of transcripts", x = "Ave transcript length [bp]")
plot(fig1e_new_plot)
fig1e_plot <- ggplot(data = pdda, aes(x = mean_length, y = num_trans, fill = (FSC))) +
geom_point(size = 4, alpha = .8, shape = 21) +
scale_fill_distiller(palette = "Spectral", name = "Condensate\nsize") +
theme(legend.position = c(.8,.8),   legend.key.size = unit(.6, "cm"), legend.key.width = unit(.5,"cm"),
legend.title = element_text(size = 22), legend.text = element_text(size = 20)) +
labs(y = "Number of transcripts", x = "Ave transcript length [bp]")
# Prepare dataframe:
fig1c_data <- master %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
drop_na() %>%
filter(tpm != 0) %>%
group_by(experiment, cell_id) %>%
summarise(n = n(), FSC = FSC[1], SSC = SSC[1], p_pseudoaligned[1], experiment[1], log2_FSC = log2(FSC[1])) %>%
filter(n < 7000)
# Calc correlation
fig1c_m <- lm(n ~ log2_FSC, fig1c_data)
fig1c_r2 <- as.character(paste("R^2 =", round(summary(fig1c_m)$r.squared, 3), sep = " "))
fig1c_pears <- paste("r = ", round(cor(fig1c_data$log2_FSC, fig1c_data$n), 2), sep = "")
# Plot:
fig1c_plot <- ggplot(data = fig1c_data, aes(x = log2_FSC, y = n)) +
geom_point(size = 4, alpha = .7, shape = 21) +
stat_smooth(method = "lm", col = "indianred2")  +
#scale_x_continuous(trans = "log10") +
annotate(geom = 'text', label = fig1c_pears, x = min(fig1c_data$log2_FSC), y = max(fig1c_data$n), hjust = -.1, vjust = 1, size = 6) +
#xlim(c(0,3e5)) +
labs(x = "Condensate size\nlog2(FSC)", y = "Number of\ndetected transcripts")
plot(fig1c_plot)
# format dataframe for PCA
pdda <- pdda_incl_bc %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
filter(tpm != 0) %>%
group_by(new_cell_id) %>%
summarise(mean_length = mean(length),
mean_gc = mean(rel_GC),
FSC = FSC[1], SSC = SSC[1],
num_trans = n()) %>%
filter(FSC != is.na(FSC))
# 1.) Export transcript ids
pdda_target_ids <- master %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool18" | experiment == "ool17" ) %>%
filter(tpm != 0) %>%
dplyr::select(target_id) %>%
distinct()
# Number of distinct transcripts:
pdda_target_ids %>% nrow()
# Export as input for base_content.py
# write.table(pdda_target_ids, file = "./pdda_target_ids.txt")
# 2.) Get sequences of each transcript and calculate gc content using custom python script:
#     base_content.py
# 3.) Import GC content information
pdda_base_content <- read.csv(file = "./pdda_resids_filter_seqs_bases.csv")
pdda_incl_bc <- master %>%
left_join(., pdda_base_content, by = "target_id")
# Chunk 1: setup
knitr::opts_chunk$set(echo = T, warning = FALSE, message = FALSE)
#options(width = 12)
# Chunk 2
# Setup
library(tidyverse)
library(factoextra)
library(cowplot)
theme_set(theme_classic(base_size=24))
setwd(dir = "~/PD/Data/OoL/43_Draft_5/_fig1/_coacervates/")
# Chunk 3
# Load seq data
master <- readRDS(file = "/Users/damian_wollny/PD/Data/OoL/19.1_Draft_2/Generate_input/draft2_input.RDS")
# Chunk 4
a_scheme <- ggdraw() + draw_image("/Users/damian_wollny/PD/Schemes/OoL/fig1.5.png")
plot(a_scheme)
# Chunk 5
# load FACS data
facs_data <- readRDS(file = "/Users/damian_wollny/PD/Data/OoL/18.2_integrative_analysis/_8_coacervate_size_comp/master_facs.RDS")
# Format data: PDDA(no RNA)
fig1b_data_no_rna <- facs_data %>% filter(experiment == "ool17_noRNA" | experiment == "ool18_noRNA") %>%
mutate(log2_FSC = log2(`FSC-A`)) %>%
mutate(log2_SSC = log2(`SSC-A`))
fig1b_m_no_rna <- lm(`SSC-A` ~ `FSC-A`, fig1b_data_no_rna)
fig1b_r2_no_rna <- as.character(paste("R^2 =", round(summary(fig1b_m_no_rna)$r.squared, 3), sep = " "))
fig1b_pears_no_rna <- paste("r = ", round(cor(fig1b_data_no_rna$`FSC-A`, fig1b_data_no_rna$`SSC-A`), 2), sep = "")
# Plot:
fig1b_plot <- ggplot(data = fig1b_data_no_rna, aes(x = `log2_FSC`, y = `log2_SSC`)) +
geom_point(size = 3, alpha = .7, shape = 21) +
annotate(geom = 'text', label = fig1b_pears_no_rna, x = min(fig1b_data_no_rna$log2_FSC), y = max(fig1b_data_no_rna$log2_SSC), hjust = 0, vjust = 1, size = 6) +
stat_smooth(col = "indianred3", alpha = .3)  +
labs(y = "Condensate granularity\nlog2(SSC)", x = "Condensate size\nlog2(FSC)")
plot(fig1b_plot)
#ggsave(fig1b_plot, file="./fig1b.pdf",width = 6, height = 6, device = "pdf")
# Chunk 6
# Prepare dataframe:
fig1c_data <- master %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
drop_na() %>%
filter(tpm != 0) %>%
group_by(experiment, cell_id) %>%
summarise(n = n(), FSC = FSC[1], SSC = SSC[1], p_pseudoaligned[1], experiment[1], log2_FSC = log2(FSC[1])) %>%
filter(n < 7000)
# Calc correlation
fig1c_m <- lm(n ~ log2_FSC, fig1c_data)
fig1c_r2 <- as.character(paste("R^2 =", round(summary(fig1c_m)$r.squared, 3), sep = " "))
fig1c_pears <- paste("r = ", round(cor(fig1c_data$log2_FSC, fig1c_data$n), 2), sep = "")
# Plot:
fig1c_plot <- ggplot(data = fig1c_data, aes(x = log2_FSC, y = n)) +
geom_point(size = 4, alpha = .7, shape = 21) +
stat_smooth(method = "lm", col = "indianred2")  +
#scale_x_continuous(trans = "log10") +
annotate(geom = 'text', label = fig1c_pears, x = min(fig1c_data$log2_FSC), y = max(fig1c_data$n), hjust = -.1, vjust = 1, size = 6) +
#xlim(c(0,3e5)) +
labs(x = "Condensate size\nlog2(FSC)", y = "Number of\ndetected transcripts")
plot(fig1c_plot)
#ggsave(fig1c_plot, file="./new_plot.pdf",width = 6, height = 6, device = "pdf")
# Chunk 7
# 1.) Export transcript ids
pdda_target_ids <- master %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool18" | experiment == "ool17" ) %>%
filter(tpm != 0) %>%
dplyr::select(target_id) %>%
distinct()
# Number of distinct transcripts:
pdda_target_ids %>% nrow()
# Export as input for base_content.py
# write.table(pdda_target_ids, file = "./pdda_target_ids.txt")
# 2.) Get sequences of each transcript and calculate gc content using custom python script:
#     base_content.py
# 3.) Import GC content information
pdda_base_content <- read.csv(file = "./pdda_resids_filter_seqs_bases.csv")
pdda_incl_bc <- master %>%
left_join(., pdda_base_content, by = "target_id")
# Chunk 8
# format dataframe for PCA
pdda <- pdda_incl_bc %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
filter(tpm != 0) %>%
group_by(new_cell_id) %>%
summarise(mean_length = mean(length),
mean_gc = mean(rel_GC),
FSC = FSC[1], SSC = SSC[1],
num_trans = n()) %>%
filter(FSC != is.na(FSC))
# Convert df into matrix; format and scale
pdda2 <- as.matrix(pdda)
row.names(pdda2) <- pdda2[,1]
pdda2 <- pdda2[,c(2:length(colnames(pdda2)))]
class(pdda2)<-"numeric"
scale_pdda2 <- scale(pdda2)
# run pca: input for prcomp needs to be a cell (rows) x gene (cols) matrix
res.pca <- prcomp(scale_pdda2)
# format pca object for plotting
df_out <- as.data.frame(res.pca$x)
var <- get_pca_var(res.pca)
var_df <- as.data.frame(var$coord) %>% dplyr::rename(PC1 = Dim.1, PC2 = Dim.2, PC3 = Dim.3, PC4 = Dim.4, PC5 = Dim.5)
var_df.1 <- as.data.frame(var$coord) %>% dplyr::rename(PC1 = Dim.1, PC2 = Dim.2, PC3 = Dim.3, PC4 = Dim.4, PC5 = Dim.5)
rownames(var_df.1) <- c("Ave transcript length","GC content","FSC", "SSC", "Num of\ntranscripts")
# df for PC labels
var_df.2 <- var_df.1[,c(1:2)]
var_df.2[,1] <- c(-0.5,-1,-5,-5,-4.5)
var_df.2[,2] <- c(-3.5,3.5,-1.2,-2,.7)
# plot PCA including variable arrows
fig1d_plot <- ggplot(data= df_out, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = .7, shape = 21) +
geom_segment(x = 0, xend = 0, y = -7.5, yend = 8, linetype=3) +
geom_segment(x = -12.5, xend = 5, y = 0, yend = 0, linetype=3) +
# scale arrows x3 for visiblity
geom_segment(data= var_df*5, aes(x= 0, y=0, xend = PC1*1, yend= PC2*1), size = 1.5, alpha = 1, color = "indianred2", arrow = arrow(length = unit(0.1, "inches"))) +
geom_label(data = var_df.2*1.5, aes(label = rownames(var_df.1), fontface=1), color = "black", size = 6, alpha = .5) +
scale_x_continuous(limits=c(-12,+5), expand = c(0, 0)) +
scale_y_continuous(limits=c(-7.5,8), expand = c(0, 0)) +
labs(x = "PC1 (68.9%)", y = "PC2 (20.6%)", title = "")
plot(fig1d_plot)
#ggsave(fig1d_plot, file="./fig1d.pdf",width = 6, height = 6, device = "pdf")
# Chunk 9
fig1e_plot <- ggplot(data = pdda, aes(x = mean_length, y = num_trans, fill = (FSC))) +
geom_point(size = 4, alpha = .8, shape = 21) +
scale_fill_distiller(palette = "Spectral", name = "Condensate\nsize") +
theme(legend.position = c(.8,.8),   legend.key.size = unit(.6, "cm"), legend.key.width = unit(.5,"cm"),
legend.title = element_text(size = 22), legend.text = element_text(size = 20)) +
labs(y = "Number of transcripts", x = "Ave transcript length [bp]")
plot(fig1e_plot)
#ggsave(fig1e_plot, file="./fig1e.pdf", width = 6, height = 6, device = "pdf")
# Chunk 1: setup
knitr::opts_chunk$set(echo = T, warning = FALSE, message = FALSE)
#options(width = 12)
# Chunk 2
# Setup
library(tidyverse)
library(factoextra)
library(cowplot)
theme_set(theme_classic(base_size=24))
setwd(dir = "~/PD/Data/OoL/38_Draft_4/_fig1/_coacervates/")
# Chunk 3
# Load seq data
master <- readRDS(file = "/Users/damian_wollny/PD/Data/OoL/19.1_Draft_2/Generate_input/draft2_input.RDS")
# Chunk 4
a_scheme <- ggdraw() + draw_image("/Users/damian_wollny/PD/Schemes/OoL/fig1.5.png")
plot(a_scheme)
# Chunk 5
# load FACS data
facs_data <- readRDS(file = "/Users/damian_wollny/PD/Data/OoL/18.2_integrative_analysis/_8_coacervate_size_comp/master_facs.RDS")
# Format data: PDDA(no RNA)
fig1b_data_no_rna <- facs_data %>% filter(experiment == "ool17_noRNA" | experiment == "ool18_noRNA") %>%
mutate(log2_FSC = log2(`FSC-A`)) %>%
mutate(log2_SSC = log2(`SSC-A`))
fig1b_m_no_rna <- lm(`SSC-A` ~ `FSC-A`, fig1b_data_no_rna)
fig1b_r2_no_rna <- as.character(paste("R^2 =", round(summary(fig1b_m_no_rna)$r.squared, 3), sep = " "))
fig1b_pears_no_rna <- paste("r = ", round(cor(fig1b_data_no_rna$`FSC-A`, fig1b_data_no_rna$`SSC-A`), 2), sep = "")
# Plot:
fig1b_plot <- ggplot(data = fig1b_data_no_rna, aes(x = `log2_FSC`, y = `log2_SSC`)) +
geom_point(size = 3, alpha = .7, shape = 21) +
annotate(geom = 'text', label = fig1b_pears_no_rna, x = min(fig1b_data_no_rna$log2_FSC), y = max(fig1b_data_no_rna$log2_SSC), hjust = 0, vjust = 1, size = 6) +
stat_smooth(col = "indianred3", alpha = .3)  +
labs(y = "Condensate granularity\nlog2(SSC)", x = "Condensate size\nlog2(FSC)")
plot(fig1b_plot)
ggsave(fig1b_plot, file="./fig1b.pdf",width = 6, height = 6, device = "pdf")
# Chunk 6
# Prepare dataframe:
fig1c_data <- master %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
drop_na() %>%
filter(tpm != 0) %>%
group_by(experiment, cell_id) %>%
summarise(n = n(), FSC = FSC[1], SSC = SSC[1], p_pseudoaligned[1], experiment[1], log2_FSC = log2(FSC[1])) %>%
filter(n < 7000)
# Calc correlation
fig1c_m <- lm(n ~ log2_FSC, fig1c_data)
fig1c_r2 <- as.character(paste("R^2 =", round(summary(fig1c_m)$r.squared, 3), sep = " "))
fig1c_pears <- paste("r = ", round(cor(fig1c_data$log2_FSC, fig1c_data$n), 2), sep = "")
# Plot:
fig1c_plot <- ggplot(data = fig1c_data, aes(x = log2_FSC, y = n)) +
geom_point(size = 4, alpha = .7, shape = 21) +
stat_smooth(method = "lm", col = "indianred2")  +
#scale_x_continuous(trans = "log10") +
annotate(geom = 'text', label = fig1c_pears, x = min(fig1c_data$log2_FSC), y = max(fig1c_data$n), hjust = -.1, vjust = 1, size = 6) +
#xlim(c(0,3e5)) +
labs(x = "Condensate size\nlog2(FSC)", y = "Number of\ndetected transcripts")
plot(fig1c_plot)
ggsave(fig1c_plot, file="./fig1c.pdf",width = 6, height = 6, device = "pdf")
# Chunk 7
# 1.) Export transcript ids
pdda_target_ids <- master %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool18" | experiment == "ool17" ) %>%
filter(tpm != 0) %>%
dplyr::select(target_id) %>%
distinct()
# Number of distinct transcripts:
pdda_target_ids %>% nrow()
# Export as input for base_content.py
# write.table(pdda_target_ids, file = "./pdda_target_ids.txt")
# 2.) Get sequences of each transcript and calculate gc content using custom python script:
#     base_content.py
# 3.) Import GC content information
pdda_base_content <- read.csv(file = "./pdda_resids_filter_seqs_bases.csv")
pdda_incl_bc <- master %>%
left_join(., pdda_base_content, by = "target_id")
# Chunk 8
# format dataframe for PCA
pdda <- pdda_incl_bc %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
filter(tpm != 0) %>%
group_by(new_cell_id) %>%
summarise(mean_length = mean(length),
mean_gc = mean(rel_GC),
FSC = FSC[1], SSC = SSC[1],
num_trans = n()) %>%
filter(FSC != is.na(FSC))
# Convert df into matrix; format and scale
pdda2 <- as.matrix(pdda)
row.names(pdda2) <- pdda2[,1]
pdda2 <- pdda2[,c(2:length(colnames(pdda2)))]
class(pdda2)<-"numeric"
scale_pdda2 <- scale(pdda2)
# run pca: input for prcomp needs to be a cell (rows) x gene (cols) matrix
res.pca <- prcomp(scale_pdda2)
# format pca object for plotting
df_out <- as.data.frame(res.pca$x)
var <- get_pca_var(res.pca)
var_df <- as.data.frame(var$coord) %>% dplyr::rename(PC1 = Dim.1, PC2 = Dim.2, PC3 = Dim.3, PC4 = Dim.4, PC5 = Dim.5)
var_df.1 <- as.data.frame(var$coord) %>% dplyr::rename(PC1 = Dim.1, PC2 = Dim.2, PC3 = Dim.3, PC4 = Dim.4, PC5 = Dim.5)
rownames(var_df.1) <- c("Ave transcript length","GC content","FSC", "SSC", "Num of\ntranscripts")
# df for PC labels
var_df.2 <- var_df.1[,c(1:2)]
var_df.2[,1] <- c(-0.5,-1,-5,-5,-4.5)
var_df.2[,2] <- c(-3.5,3.5,-1.2,-2,.7)
# plot PCA including variable arrows
fig1d_plot <- ggplot(data= df_out, aes(x = PC1, y = PC2)) +
geom_point(size = 4, alpha = .7, shape = 21) +
geom_segment(x = 0, xend = 0, y = -7.5, yend = 8, linetype=3) +
geom_segment(x = -12.5, xend = 5, y = 0, yend = 0, linetype=3) +
# scale arrows x3 for visiblity
geom_segment(data= var_df*5, aes(x= 0, y=0, xend = PC1*1, yend= PC2*1), size = 1.5, alpha = 1, color = "indianred2", arrow = arrow(length = unit(0.1, "inches"))) +
geom_label(data = var_df.2*1.5, aes(label = rownames(var_df.1), fontface=1), color = "black", size = 6, alpha = .5) +
scale_x_continuous(limits=c(-12,+5), expand = c(0, 0)) +
scale_y_continuous(limits=c(-7.5,8), expand = c(0, 0)) +
labs(x = "PC1 (68.9%)", y = "PC2 (20.6%)", title = "")
plot(fig1d_plot)
ggsave(fig1d_plot, file="./fig1d.pdf",width = 6, height = 6, device = "pdf")
# Chunk 9
fig1e_plot <- ggplot(data = pdda, aes(x = mean_length, y = num_trans, fill = (FSC))) +
geom_point(size = 4, alpha = .8, shape = 21) +
scale_fill_distiller(palette = "Spectral", name = "Condensate\nsize") +
theme(legend.position = c(.8,.8),   legend.key.size = unit(.6, "cm"), legend.key.width = unit(.5,"cm"),
legend.title = element_text(size = 22), legend.text = element_text(size = 20)) +
labs(y = "Number of transcripts", x = "Ave transcript length [bp]")
plot(fig1e_plot)
ggsave(fig1e_plot, file="./fig1e.pdf", width = 6, height = 6, device = "pdf")
getwd()
fig1e_new_plot
# another suggestion for the plot in Fig 1E:
fig1e_new_plot <- ggplot(data = pdda, aes(y = num_trans, x = mean_length,  size = (FSC))) +
geom_point(alpha = .8, shape = 21) +
scale_fill_distiller(palette = "Spectral", name = "Ave RNA\nlength") +
stat_smooth(col = "indianred2", show.legend = FALSE) +
theme(legend.position = c(.8,.8),   legend.key.size = unit(.6, "cm"), legend.key.width = unit(.5,"cm"),
legend.title = element_text(size = 22), legend.text = element_text(size = 20)) +
labs(y = "Number of transcripts", x = "Ave transcript length [bp]")
plot(fig1e_new_plot)
pdda
master
master %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool18" | experiment == "ool17" ) %>%
filter(tpm != 0)
master %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool18" | experiment == "ool17" ) %>%
filter(tpm != 0) %>%
dplyr::select(target_id) %>%
distinct()
master %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
filter(tpm != 0) %>%
group_by(new_cell_id) %>%
summarise(mean_length = mean(length),
FSC = FSC[1], SSC = SSC[1],
num_trans = n()) %>%
filter(FSC != is.na(FSC))
master %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
filter(tpm != 0) %>%
group_by(new_cell_id) %>%
summarise(mean_length = mean(length),
FSC = FSC[1], SSC = SSC[1],
num_trans = n()) %>%
filter(FSC != is.na(FSC)) %>%
ggplot(aes(y = num_trans, x = mean_length,  size = (FSC))) +
geom_point(alpha = .8, shape = 21) +
scale_fill_distiller(palette = "Spectral", name = "Ave RNA\nlength") +
stat_smooth(col = "indianred2", show.legend = FALSE) +
theme(legend.position = c(.8,.8),   legend.key.size = unit(.6, "cm"), legend.key.width = unit(.5,"cm"),
legend.title = element_text(size = 22), legend.text = element_text(size = 20)) +
labs(y = "Number of transcripts", x = "Ave transcript length [bp]")
master %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
filter(tpm != 0) %>%
group_by(new_cell_id) %>%
summarise(mean_length = mean(length),
FSC = FSC[1], SSC = SSC[1],
num_trans = n()) %>%
filter(FSC != is.na(FSC)) %>%
ggplot(aes(y = num_trans, x = mean_length,  size = (FSC))) +
geom_point(alpha = .8, shape = 21) +
scale_fill_distiller(palette = "Spectral", name = "Ave RNA\nlength") +
stat_smooth(col = "indianred2", show.legend = FALSE) +
theme(legend.position = c(.8,.8),   legend.key.size = unit(.6, "cm"), legend.key.width = unit(.5,"cm"),
legend.title = element_text(size = 22), legend.text = element_text(size = 20)) +
labs(y = "Number of transcripts", x = "Ave transcript length [bp]", size = "Coacervate size")
master %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
filter(tpm != 0) %>%
group_by(new_cell_id) %>%
summarise(mean_length = mean(length),
FSC = FSC[1], SSC = SSC[1],
num_trans = n()) %>%
filter(FSC != is.na(FSC)) %>%
ggplot(aes(y = num_trans, x = mean_length,  size = (FSC))) +
geom_point(alpha = .8, shape = 21) +
scale_fill_distiller(palette = "Spectral", name = "Ave RNA\nlength") +
stat_smooth(col = "indianred2", show.legend = FALSE) +
theme(legend.position = c(.8,.8),   legend.key.size = unit(.6, "cm"), legend.key.width = unit(.5,"cm"),
legend.title = element_text(size = 22), legend.text = element_text(size = 20)) +
labs(y = "Number of transcripts", x = "Ave transcript length [bp]", size = "Coacervate\nsize [FSC]")
getwd()
# setwd
setwd("~/PD/Data/OoL/45_github/single_coacervate_seq/_fig1")
getwd()
setwd("~/PD/Data/OoL/45_github/single_coacervate_seq")
get()
getwd()
a_scheme <- ggdraw() + draw_image("./_fig1/fig1a.png")
plot(a_scheme)
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, warning = FALSE, message = FALSE)
# Chunk 2
# Setup
library(tidyverse)
library(cowplot)
theme_set(theme_classic(base_size=24))
# Chunk 3
# setwd
setwd("~/PD/Data/OoL/45_github/single_coacervate_seq")
# Load seq data
master <- readRDS(file = "./_input/coacervate_input.RDS")
# Chunk 4
a_scheme <- ggdraw() + draw_image("./_fig1/fig1a.png")
plot(a_scheme)
# Chunk 5
a_scheme <- ggdraw() + draw_image("./_fig1/fig1b.png")
plot(a_scheme)
# Chunk 6
master %>%
mutate(new_cell_id = paste(cell_id, experiment, sep = "_")) %>%
filter(experiment == "ool17" | experiment == "ool18") %>%
filter(tpm != 0) %>%
group_by(new_cell_id) %>%
summarise(mean_length = mean(length),
FSC = FSC[1], SSC = SSC[1],
num_trans = n()) %>%
filter(FSC != is.na(FSC)) %>%
ggplot(aes(y = num_trans, x = mean_length,  size = (FSC))) +
geom_point(alpha = .8, shape = 21) +
scale_fill_distiller(palette = "Spectral", name = "Ave RNA\nlength") +
stat_smooth(col = "indianred2", show.legend = FALSE) +
theme(legend.position = c(.8,.8),   legend.key.size = unit(.6, "cm"), legend.key.width = unit(.5,"cm"),
legend.title = element_text(size = 22), legend.text = element_text(size = 20)) +
labs(y = "Number of transcripts", x = "Ave transcript length [bp]", size = "Coacervate\nsize [FSC]")
